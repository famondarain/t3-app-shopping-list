import type { Items } from "@prisma/client";
import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import ItemModal from "t3-project/components/ItemModal";
import { api } from "t3-project/utils/api";
import { HiX } from "react-icons/hi";

const Home: NextPage = () => {
  const [items, setItems] = useState<Items[]>([]);
  const [modalOpen, setModalOpen] = useState<boolean>(false);

  const { data: itemsData, isLoading: itemsDataLoading } =
    api.item.getAllItems.useQuery(undefined, {
      onSuccess(items) {
        setItems(items);
      },
    });

  const { mutate: deleteItem } = api.item.deleteItem.useMutation({
    onSuccess: (deletedItem) => {
      setItems((prev) => prev.filter((item) => item.id !== deletedItem.id));
    },
  });

  const { mutate: toggleChecked } = api.item.toggleChecked.useMutation({
    onSuccess(updatedItem) {
      const ids = items.map((item) => item.id);
      const updatedItemIndex = ids.indexOf(updatedItem.id);
      const updatedItemsArray = items;
      updatedItemsArray[updatedItemIndex] = updatedItem;
      setItems(updatedItemsArray);
    },
  });

  return (
    <>
      <Head>
        <title>Shopping List</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {modalOpen && (
        <ItemModal setModalOpen={setModalOpen} setItems={setItems} />
      )}

      <main className="mx-auto my-12 max-w-3xl">
        <div className="flex justify-between">
          <h2 className="text-2xl font-semibold">My Shopping List</h2>
          <button
            type="button"
            className="rounded-md bg-violet-500 p-2 text-sm text-white transition hover:bg-violet-600"
            onClick={() => setModalOpen(true)}
          >
            Add shopping item
          </button>
        </div>

        {(!itemsData || itemsDataLoading) && <p>Loading...</p>}

        <ul className="mt-4">
          {items?.map((item) => (
            <li key={item.id} className="flex items-center justify-between">
              <span
                onClick={() =>
                  toggleChecked({ id: item.id, checked: !item.checked })
                }
                className={`hover:cursor-pointer ${
                  item.checked
                    ? "line-through decoration-red-500 decoration-2"
                    : "no-underline"
                }`}
              >
                {item.name}
              </span>
              <HiX
                className="text-l text-red-500 hover:cursor-pointer"
                onClick={() => deleteItem({ id: item.id })}
              />
            </li>
          ))}
        </ul>
      </main>
    </>
  );
};

export default Home;
